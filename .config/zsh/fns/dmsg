# Display a message below the prompt
# Adapted from https://gist.github.com/psprint/b6503c0c37de483f68d055e9c47981b3
dmsg() {
	if [ $# -eq 0 ]; then
		print "Display a message under the prompt"
		print -P "Usage:   %F{green}dmsg%f [@sleep:<n>] [\"message\"]"
		print " message The message to display. Also supports functions"
		print " sleep   (Optional) Time in seconds for the message to appear"
	fi
	typeset -g dm=y # For clearmotd in .zlogin
	[[ $1 = <-> && ( ${#} = 1 || ( $2 = (hup|nval|err) && ${#} = 2 ) ) ]] && { zle && {
		local alltext text IFS=$'\n' nl=$'\n'
		repeat 25; do read -r -u"$1" text; alltext+="${text:+$text$nl}"; done
        	[[ $alltext = @rst$nl ]] && { builtin zle reset-prompt; ((1)); } || \
        		{ [[ -n $alltext ]] && builtin zle -M "$alltext"; }
	}
		builtin zle -F "$1"; exec {1}<&-
		return 0
	}
	local THEFD=1337 hasw
	# The expansion is: if there is @sleep: pfx, then use what's after
	# it, otherwise substitute 0
	exec {THEFD} < <(LANG=C sleep $(( 0.01 + ${${${(M)1#@sleep:}:+${1#@sleep:}}:-0} )); print -r -- ${1:#(@msg|@sleep:*)} "${@[2,-1]}"; )
	command true # Zsh bug workaround - see: http://www.zsh.org/mla/workers/2018/msg00966.html
	builtin zle -F "$THEFD" dmsg
}

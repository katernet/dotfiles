# cd to zsh-z known directories using fzf
# Adapted from https://unhexium.net/linux/nobody-uses-cd-anymore
fcd() {
	(($+commands[fzy]))   || { echo "Function requires: fzy"   >&2 && return 1 }
	type zshz > /dev/null || { echo "Function requires: zsh-z" >&2 && return 1 }
	if [[ -d $1 ]]; then # Folder argument provided exists in PWD
		builtin cd "$@"
	else
		local tac
		local -a locations
		[[ "$OSTYPE" == darwin* ]] && tac='tail -r' || tac='tac' # Setup reverse sort command
		if [[ -n $1 ]]; then # Folder argument provided
			locations+=( "${(@f)$(z -lr "$1" 2>&1 | eval $tac)}" )
		else
			locations+=( "${(r:10:)0} $HOME" ) # Provide home directory as first result
			locations+=( "${(@f)$(z -lr 2>&1 | eval $tac)}" )
		fi
		# No locations found - First item length is null (from zsh-z)
		(( ${#locations[1]} == 0 )) && { echo "No directory matches found by zsh-z" >&2 && return 1 } 
		# One location found - cd to location
		if (( ${#locations[@]} == 1 )); then
			local dir=( $(builtin print "${locations[@]}") )
			shift dir
			builtin cd "${dir}"
		# Fuzzy search locations
		else
			local dir=( $(builtin print "${(j.\n.)locations[@]}" | fzy) ) && {
				(( #dir > 0 )) || return 1 # No fuzzy results found
				shift dir
				[[ -n $dir ]] && builtin cd "${dir}"
				zle && builtin zle accept-line
			}
		fi
	fi
	[[ $2 == "l" ]] && ls -lah
	return 0
}
#compdef zshz fcd

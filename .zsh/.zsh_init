# Env vars
export GPG_TTY=$(tty) 				# GPG signing
export LSCOLORS="Gxfxcxdxbxegedabagacad" 	# ls colors
export LS_COLORS="di=1;36:ln=35:so=32:pi=33:ex=31:bd=34;46:cd=34;43:su=30;41:sg=30;46:tw=30;42:ow=30;43" # GNU ls colors
export RPROMPT_EXIT=1 				# Right prompt exit code
export RPROMPT_CMDTIME=0 			# Right prompt command time

# Opt
setopt always_to_end 		# Cursor placed at end after completion
setopt auto_cd 			# Change directory without cd
setopt auto_menu 		# Show completion menu on successive tab press
setopt auto_pushd 		# Make cd push the old directory onto the directory stack
setopt pushdignoredups 		# Don’t push multiple copies of the same directory onto the directory stack
setopt pushdminus 		# Exchanges meanings of + and - with a number specified directory in the stack
setopt complete_in_word 	# Allow completion from within a word/phrase
setopt extended_history		# Record timestamp of command in HISTFILE
setopt globdots			# Dotfiles are matched without explicitly specifying the dot
setopt hist_expire_dups_first 	# Delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_ignore_dups 	# Ignore duplicated commands history list
setopt hist_ignore_space 	# Ignore commands that start with space
setopt inc_append_history 	# Add commands to HISTFILE in order of execution
setopt prompt_subst 		# Allow expansion in prompts
unsetopt flowcontrol 		# Output flow control via start/stop characters is disabled in the shell’s editor
unsetopt histverify 		# Disable confirmation in expansion
unsetopt menu_complete 		# Do not autoselect the first completion entry

# Keybinds
bindkey '^[[3~' 	delete-char 			# [Del] - forward delete
bindkey '^[[H' 		beginning-of-line 		# [Home] - beginning of line
bindkey '^[[F' 		end-of-line 			# [End] - end of line
bindkey '^[[A' 		up-line-or-beginning-search 	# [Up] - history search
bindkey '^[[B'		down-line-or-beginning-search 	# [Down] - history search

# History
HISTFILE="$ZSH"/.zsh_hist
HISTSIZE=50000
SAVEHIST=10000

# z files
_Z_DATA="$ZSH"/.z

# zplugin
declare -A ZPLGM  # Initialize zplugin's hash definition
ZPLGM[HOME_DIR]="$ZSH"/zplugin
ZPLGM[PLUGINS_DIR]="$ZSH"/zplugin/plugins
ZPLGM[COMPLETIONS_DIR]="$ZSH"/zplugin/completions
ZPLGM[SNIPPETS_DIR]="$ZSH"/zplugin/snippets

# compinit
# Load only once per day and compile dump for fast load https://gist.github.com/ctechols/ca1035271ad134841284
custom_compinit() {
	autoload -Uz compinit
	setopt extendedglob
	local zcd="$ZSH"/.zcompdump
	local zcdc="$zcd.zwc"
	if [[ $UID = 0 || -n $SUDO_USER ]]; then # Root user
		compinit -i -d "$zcd"_$USER # Dump for root user. -i: Ignore insecure files
		return
	fi
	if [[ -f "$zcd"(#qN.m1) ]]; then # Requires extendedglob opt
		compinit -d "$zcd" # -d: Custom dump path
		{ zcompile "$zcd" } &| # Compile dump in background job
	else
		compinit -C -d "$zcd" # -C: Ignore checking
		{ [[ ! -f "$zcdc" || "$zcd" -nt "$zcdc" ]] && zcompile "$zcd" } &| # If no compiled dump or dump newer than compiled dump
	fi
	unsetopt extendedglob
}

# Load plugins with zplugin
source "$ZSH"/zplugin/zplugin.zsh
#(( ${+_comps} )) && _comps[zplugin]=_zplugin # Required for sourcing after loading compinit
for p ($plugins); do
	if [ -e "$ZSH"/plugins/$p/$p.plugin.zsh ]; then
		zplugin ice lucid wait'0' ${${(M)p:#*syntax*}:+atinit'custom_compinit; zpcdreplay'} # Call compinit with custom_compinit() instead of zpcompinit
		zplugin light "$ZSH"/plugins/$p
	fi
done

# Custom syntax highlighting
typeset -gA ZSH_HIGHLIGHT_STYLES # Prevent assignment to invalid subscript range
ZSH_HIGHLIGHT_STYLES[globbing]=fg=99 		# SlateBlue1
ZSH_HIGHLIGHT_STYLES[history-expansion]=fg=99
